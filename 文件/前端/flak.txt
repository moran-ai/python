笔记
1.如何渲染模板:
   *  把模板放在"templates"文件夹下.
   * 从"flask"中导入"render_template"函数.
   * 在视图函数中， 调用"render_template"函数,渲染模板.
注意：只需填写模板的名字，不需要填写"templates"这个文件夹的路径.

2.模板传参:
   *  如果只有一个或者少量参数，直接在"render_template"函数中填写关键字参数就可以了.
   * 如果有多个参数的时候，那么可以先把所有的参数放在字典中，然后在"render_template"中，
    使用两个星号，把字典转换成关键字参数传递进去，这样的代码更方便管理和使用.

3.虚拟环境：pip install virtualenv

4.开辟新的虚拟环境: virtualenv [virtualenv-name]

5.激活虚拟环境：
   * [类linux]:source [虚拟环境的目录]/bin/activate
   * [windows]: 直接进入到虚拟环境的目录：activate
   * [退出虚拟环境]： deactivate

pip install virtualenv   下载virtualenv安装包
dir
mkdir virtualenv     新建目录
dir
cd virtualenv   切换到virtualenv
virtualenv flask-env   新建 flask-env的盒子
dir
cd flask-env    切换到flask-env
dir
cd scripts    激活
activate   
deactivate  退出虚拟环境

flask的安装
dir
activate
pip install flask
python
import flask
print(flask.__version__) 查看版本号


6.认识url
1.如果使用的是http协议，那么浏览器就会使用80端口去请求服务器的资源.
2.如果使用的是https协议，那么浏览器就会使用443端口去请求服务器的资源.
http:www.jianshu.com/
https:www,baidu.com/

7.第一个flask程序讲解
1.第一次创建项目的时候，要添加flask的虚拟环境,添加虚拟环境的时候,一定要选择到python这个执行文件
比如你的flask的虚拟环境的目录在/User/virtualenv/flask-env/bin/python
详细讲解:
# 从flask框架中导入Flask这个类
from flask import Flask

# 初始化一个flask对象
# Flask()
# 需要传递一个参数__name__
# 1.方便flask框架去寻找资源
# 2.方便flask插件比如Flask-Sqlalchemy出现错误时，好去寻找问题所在的位置.

app = Flask(__name__)


# @app.route是一个装饰器
# @开头，并且在函数的上面,说明是装饰器.
# 这个装饰器的作用是，是一个url与视图函数的映射.
# 127.0.0.1:5000/   ->   去请求hello_world这个函数, 然后将结果返回给浏览器.
@app.route('/')   # 装饰器
def hello_world():   # 视图函数
    return '这是一个HTML文档'
# 如果当前这个文件是作为入口程序运行，那么就执行app.run()


if __name__ == '__main__':
    # app.run()
    # 启动一个应用服务器，来接受用户的请求.
    # While True:
    #    listen()  监听
    app.run()



8.设置debug模式
1在app.run()中传入一个关键字参数debug, app=(debug=True), 就设置当前项目为debug模式
2.debug的两大功能:
    * 当程序出现问题时，可以在页面看到错误信息和错误位置。
    * 只要修改了项目中的'python’文件，程序会自动加载,不需要重新启动服务器。

9.url传参数
1.参数的作用,可以在相同的URL，但是指定不同的参数，来加载不同的数据
2.在flask中如何使用参数.
"""
@app.route('/article/<id>')
def article():
      return  u ‘ 您请求的参数是：%s' % id
"""
* 参数需要放在两个尖括号中
* 视图函数中需要放和url中同名的参数

10.反转url：
1.什么叫反转url:从视图函数到url的反转叫做反转url
2.反转url的用处:
   * 在页面重定向时候，会使用url反转.
   * 在模板中也会使用url反转.

11.页面跳转和重定向
1.用处：在用户访问一些需要登录的页面时，如果用户没有登录，那么可以先让他重定向回到登录界面.
2.代码实现 :
   """
    from flask import redirect,url
    redirect(url_for('login'))
   """
